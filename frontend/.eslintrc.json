{
  "root": true,
  "ignorePatterns": ["dist", "coverage"],
  "parserOptions": {
    "ecmaVersion": 2020
  },
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "rb",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "rb",
            "style": "camelCase"
          }
        ],
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-deprecated": "error",
        "@typescript-eslint/no-explicit-any":"off",
        "eqeqeq": ["error", "always", { "null": "ignore" }],
        "no-restricted-syntax": [
          "error",
          {
            "selector": "CallExpression[callee.name='fdescribe']",
            "message": "do not use fdescribe"
          },
          {
            "selector": "CallExpression[callee.name='fit']",
            "message": "do not use fit"
          }
        ],
        "no-restricted-imports": [
          "error",
          {
            "paths": [
              {
                "name": "rxjs/Rx",
                "message": "Please import directly from 'rxjs' instead"
              }
            ]
          }
        ],
        "@typescript-eslint/no-inferrable-types": [
          "error",
          { "ignoreParameters": true }
        ],
        "no-fallthrough": "error"
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended", "plugin:prettier/recommended"],
      "rules": {
        "@angular-eslint/template/eqeqeq": [
          "error",
          {
            "allowNullOrUndefined": true
          }
        ],
        "@angular-eslint/template/prefer-self-closing-tags": "error"
      }
    }
  ]
}
